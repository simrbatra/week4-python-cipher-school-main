#try,exception handling
while True:
    try:
        age = int(input('enter your age: '))
        break
    except valueError:
        print('maybe you entered string instead of number, try again')
    except:
        print('unexcepted error..')
if age<18:
    print('you can't play this )game.')
else:
    print('you can play this game)


#else and finally clause in exception handling
while True:
    try:
        number = int(input('enter your number: '))
    exceptvalueError:
        print("Please type integer!! s")
    except:
        print("Unexcepted error!!!")
    else:
        print(f'user input = {number}')
        break
    finally:
        print('finally block ....')


#custom_exception
class NameTooShortError(valueError):
    pass
def validate(name):
    if len(name)<8:
        raise NameTooShortError('name is too short')
username = input('Enter your name: ')
validate(username)
print(f'hello{username}')


#read text file
f = open('file1.txt')
print(f'cursor position - {f.tell()}')
print(f.read())
print(f.readline())
print(f.readline())
print(f'cursor position - {f.tell()}')
print('before seek method')
f.seek(0)
print('after seek method')
print(f'cursor position - {f.tell()}')
print(f.read())
lines = f.readlines()
print(len(lines))
for line in lines:
    print(line,end = '')
print(f.name)
f.close()
print(f.closed())

#with block
with open('file1.txt') as f:
    data = f.read()
    print(data)
print(f.closed)


#write to file
with open('file1.txt','w')as f:
    f.write('hello there\nsubscribe to my channel')
with open('file1.txt','a')as f:
    f.write('please do it\n')
with open('file1.txt','r+')as f:
    f.seek(len(f.read()))
    f.write('please do it')

#read and write
with open('file2.txt','r')as rf:
    with open(;file1.txt','w')as wf:
        wf.write(rf.read())

#read big files
with open('file.txt', 'r') as f:
    data = f.read(100)
    while len(data)>0:
        print(data)
        data =  f.read(100)

#read CSV files
from csv import reader
with open('file2.csv','r')as f:
    csv_reader = reader(f)
    for row in csv_reader:
        print(row)


#read csv files with dictreader
from csv import DictReader
with open('file.csv','r')as f:
    csv_reader = DictReader(f,delimiter ='|')
    for row in csv_reader:
        print(row['email'])

#write csv files
from csv import writer
with open('file3.csv','w', newline='')as f:
    csv_writer = writer(f)
    csv_writer.writerrows([['name', 'country'],['mohit','INDIA'],['harshit','INDIA']])

#write csv files with dictreader
from csv import DictWriter
with open('final.csv','w', newline='')as f:
    csv_writer = DictWriter(f,feildnames=['firstname', 'lastname', 'age'])
    csv_writer.writeheader()

    csv_writer.writerows([
        {'firstname': 'harshit','lastname': 'vashistha', 'age':500},
        {'firstname': 'harshit','lastname': 'vashistha', 'age':500},
        {'firstname': 'harshit','lastname': 'vashistha', 'age':500},
    ])

#read and write csv files simultaneously
from csv import DictReader,DictWriter
with open('file.csv','r')as rf:
    with open(;file2.csv','w', newline = '')as wf:
        csv_reader = DictReader(rf)
        csv_writer = DictWriter(wf,feildnames=['firstname', 'lastname', 'age'])
        csv_writer.writeheader()
        for row in csv_reader:
            fname,lname,age = row['firstname'],row['lastname'],row['age']
            csv_writer.writerow({
            'first_name': fname.upper(),
            'last_name': lname.upper(),
            'age': age 
            })


#os module
import os 
os.getcwd()
os.chdir(r'F:\stuff')
print(os.getcwd())
os.mkdir('movies')
print(os.path.exists('movies'))
if os.path.exists('movies')
    print('already exists')
else:
    os.mkdir('movies')
open('files.txt', 'a').close()
os.mkdir(r'F:\stuff\movies)
for item in os.listdir(r'F:\stuff'):
    path = os.path.join('F:\stuff',item)
    print(path)


#os module part 2
import os 
import shutil
os.chdirr(r'F:\stuff\newstuff')
print(os.listdir())
fileiter = os.walk(r'F:\stuff\newstuff')
for current_path, folder_names, file_names in fileiter:
    print(f'current path:{current_path}')
    print(f'folder names:{folder_names}')
    print(f'file names:{file_names}')
os.makedirs('new/movies')
shutil.rmtree('songs')
shutil.copytree('new', 'documents/new')
shutil.copy('file.txt', 'documents/file.txt')
shutil.move('file.txt', 'new/file2.txt')
shutil.move('new', 'documents/new2')


#image in python
from PIL import Image, ImageEnhance, ImageFilter
import os
img1.save('dog1.pdf')
img1.show()
250
max_size =(250,250)
img1.thumbnail(max_size)
img1.save('dog1small.jpg')
for item in os.listdir():
    if item.endswith('.jpg')
        img1 = Image.open(item)
        filename,extension = os.path.splittext(item)
        img1.save(f'{filename}.png')
img1 = Image.open('dog1.png')
enhancer = ImageEnhance.Sharpness(img1)
enhancer.enhance(5).save('dog1edited.jpg')
0:blurry
1:original image
2:image with increased Sharpness
----color---
img1 = Image.open('dog1.jpg')
enhancer = ImageEnhance.color(img1)
enhancer.enhance(2).save('dogedited.jpg')
----brightness----
img1 = Image.open('dog1.jpg')
enhancer = ImageEnhance.Brightness(img1)
enhancer.enhance(2).save('dogedited.jpg')
----contrast----
img1 = Image.open('dog1.jpg')
enhancer = ImageEnhance.contrast(img1)
enhancer.enhance(2).save('dogedited.jpg')
----image blur----
img1.filter(ImageFilter.gaussianBlur(radius=4)).save('dog1edited.jpg')

from PIL import Image,Imagefilter,ImageEnhance
image = image.open('cute.jpg')
image.filter(ImagesFilter.maxFilter(size=0)).show()
enhancer = ImageEnhance.Brightness(image)
enhancer.enhance(4).show()
